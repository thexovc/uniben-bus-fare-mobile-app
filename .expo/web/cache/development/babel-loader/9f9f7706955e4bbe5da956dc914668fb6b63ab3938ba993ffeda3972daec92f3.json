{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Dashboard from \"./screens/Dashboard\";\nimport { Entypo, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\nimport Activity from \"./screens/Activity\";\nimport { useFonts } from \"expo-font\";\nimport SettingScreen from \"./screens/SettingScreen\";\nimport { useContext } from \"react\";\nimport { UserContext } from \"./context/UserContext\";\nimport MyStack from \"./components/MyStack\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nexport default function Main() {\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  console.log({\n    user: user\n  });\n  var _useFonts = useFonts({\n      \"NanumGothicCoding-Regular\": require(\"./fonts/NanumGothicCoding-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {} else {\n    return _jsx(_Fragment, {\n      children: !user ? _jsx(_Fragment, {\n        children: _jsx(MyStack, {})\n      }) : _jsxs(Tab.Navigator, {\n        children: [_jsx(Tab.Screen, {\n          name: \"Dashboard\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref) {\n              var color = _ref.color,\n                size = _ref.size,\n                focused = _ref.focused;\n              return _jsx(Entypo, {\n                name: \"home\",\n                size: size,\n                color: focused ? \"coral\" : \"black\"\n              });\n            },\n            tabBarShowLabel: false,\n            headerShown: false\n          },\n          component: Dashboard\n        }), _jsx(Tab.Screen, {\n          name: \"Activities\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var color = _ref2.color,\n                size = _ref2.size,\n                focused = _ref2.focused;\n              return _jsx(MaterialIcons, {\n                name: \"notifications-active\",\n                size: size,\n                color: focused ? \"coral\" : \"black\"\n              });\n            },\n            tabBarShowLabel: false,\n            headerShown: false\n          },\n          component: Activity\n        }), _jsx(Tab.Screen, {\n          name: \"Settings\",\n          options: {\n            tabBarIcon: function tabBarIcon(_ref3) {\n              var color = _ref3.color,\n                size = _ref3.size,\n                focused = _ref3.focused;\n              return _jsx(Ionicons, {\n                name: \"settings\",\n                size: size,\n                color: focused ? \"coral\" : \"black\"\n              });\n            },\n            tabBarShowLabel: false,\n            headerShown: false\n          },\n          component: SettingScreen\n        })]\n      })\n    });\n  }\n}","map":{"version":3,"names":["createBottomTabNavigator","createStackNavigator","Dashboard","Entypo","Ionicons","MaterialIcons","Activity","useFonts","SettingScreen","useContext","UserContext","MyStack","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Tab","Stack","Main","_useContext","user","console","log","_useFonts","require","_useFonts2","_slicedToArray","fontsLoaded","children","Navigator","Screen","name","options","tabBarIcon","_ref","color","size","focused","tabBarShowLabel","headerShown","component","_ref2","_ref3"],"sources":["C:/Users/USER/Documents/Mobile DEV/uniben-transport/Main.js"],"sourcesContent":["import { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport Dashboard from \"./screens/Dashboard\";\r\n\r\nimport { Entypo, Ionicons, MaterialIcons } from \"@expo/vector-icons\";\r\nimport Activity from \"./screens/Activity\";\r\nimport { useFonts } from \"expo-font\";\r\nimport SettingScreen from \"./screens/SettingScreen\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"./context/UserContext\";\r\nimport MyStack from \"./components/MyStack\";\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Main() {\r\n  const { user } = useContext(UserContext);\r\n\r\n  console.log({ user });\r\n\r\n  const [fontsLoaded] = useFonts({\r\n    \"NanumGothicCoding-Regular\": require(\"./fonts/NanumGothicCoding-Regular.ttf\"),\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n  } else {\r\n    return (\r\n      <>\r\n        {!user ? (\r\n          <>\r\n            <MyStack />\r\n          </>\r\n        ) : (\r\n          <Tab.Navigator>\r\n            <Tab.Screen\r\n              name=\"Dashboard\"\r\n              options={{\r\n                tabBarIcon: ({ color, size, focused }) => (\r\n                  <Entypo\r\n                    name=\"home\"\r\n                    size={size}\r\n                    color={focused ? \"coral\" : \"black\"}\r\n                  />\r\n                ),\r\n                tabBarShowLabel: false,\r\n                headerShown: false,\r\n              }}\r\n              component={Dashboard}\r\n            />\r\n\r\n            <Tab.Screen\r\n              name=\"Activities\"\r\n              options={{\r\n                tabBarIcon: ({ color, size, focused }) => (\r\n                  <MaterialIcons\r\n                    name=\"notifications-active\"\r\n                    size={size}\r\n                    color={focused ? \"coral\" : \"black\"}\r\n                  />\r\n                ),\r\n                tabBarShowLabel: false,\r\n                headerShown: false,\r\n              }}\r\n              component={Activity}\r\n            />\r\n            <Tab.Screen\r\n              name=\"Settings\"\r\n              options={{\r\n                tabBarIcon: ({ color, size, focused }) => (\r\n                  <Ionicons\r\n                    name=\"settings\"\r\n                    size={size}\r\n                    color={focused ? \"coral\" : \"black\"}\r\n                  />\r\n                ),\r\n                tabBarShowLabel: false,\r\n                headerShown: false,\r\n              }}\r\n              component={SettingScreen}\r\n            />\r\n          </Tab.Navigator>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}