{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Toast, { BaseToast, ErrorToast } from \"react-native-toast-message\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var toastConfig = {\n  success: function success(props) {\n    return _jsx(BaseToast, _objectSpread(_objectSpread({}, props), {}, {\n      style: {\n        borderLeftColor: \"green\"\n      },\n      contentContainerStyle: {\n        paddingHorizontal: 15\n      },\n      text1Style: {\n        fontSize: 20,\n        fontWeight: \"800\"\n      }\n    }));\n  },\n  error: function error(props) {\n    return _jsx(ErrorToast, _objectSpread(_objectSpread({}, props), {}, {\n      contentContainerStyle: {\n        paddingHorizontal: 15\n      },\n      text1Style: {\n        fontSize: 20\n      },\n      text2Style: {\n        fontSize: 15\n      }\n    }));\n  },\n  tomatoToast: function tomatoToast(_ref) {\n    var text1 = _ref.text1,\n      props = _ref.props;\n    return _jsxs(View, {\n      style: {\n        height: 60,\n        width: \"100%\",\n        backgroundColor: \"tomato\"\n      },\n      children: [_jsx(Text, {\n        children: text1\n      }), _jsx(Text, {\n        children: props.uuid\n      })]\n    });\n  }\n};","map":{"version":3,"names":["Toast","BaseToast","ErrorToast","jsx","_jsx","jsxs","_jsxs","toastConfig","success","props","_objectSpread","style","borderLeftColor","contentContainerStyle","paddingHorizontal","text1Style","fontSize","fontWeight","error","text2Style","tomatoToast","_ref","text1","View","height","width","backgroundColor","children","Text","uuid"],"sources":["C:/Users/USER/Documents/Mobile DEV/uniben-transport/utils/CustomToast.js"],"sourcesContent":["import Toast, { BaseToast, ErrorToast } from \"react-native-toast-message\";\r\n\r\n/*\r\n  1. Create the config\r\n*/\r\nexport const toastConfig = {\r\n  /*\r\n    Overwrite 'success' type,\r\n    by modifying the existing `BaseToast` component\r\n  */\r\n  success: (props) => (\r\n    <BaseToast\r\n      {...props}\r\n      style={{ borderLeftColor: \"green\" }}\r\n      contentContainerStyle={{ paddingHorizontal: 15 }}\r\n      text1Style={{\r\n        fontSize: 20,\r\n        fontWeight: \"800\",\r\n      }}\r\n    />\r\n  ),\r\n  /*\r\n    Overwrite 'error' type,\r\n    by modifying the existing `ErrorToast` component\r\n  */\r\n  error: (props) => (\r\n    <ErrorToast\r\n      {...props}\r\n      contentContainerStyle={{ paddingHorizontal: 15 }}\r\n      text1Style={{\r\n        fontSize: 20,\r\n      }}\r\n      text2Style={{\r\n        fontSize: 15,\r\n      }}\r\n    />\r\n  ),\r\n  /*\r\n    Or create a completely new type - `tomatoToast`,\r\n    building the layout from scratch.\r\n\r\n    I can consume any custom `props` I want.\r\n    They will be passed when calling the `show` method (see below)\r\n  */\r\n  tomatoToast: ({ text1, props }) => (\r\n    <View style={{ height: 60, width: \"100%\", backgroundColor: \"tomato\" }}>\r\n      <Text>{text1}</Text>\r\n      <Text>{props.uuid}</Text>\r\n    </View>\r\n  ),\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,4BAA4B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAK1E,OAAO,IAAMC,WAAW,GAAG;EAKzBC,OAAO,EAAE,SAAAA,QAACC,KAAK;IAAA,OACbL,IAAA,CAACH,SAAS,EAAAS,aAAA,CAAAA,aAAA,KACJD,KAAK;MACTE,KAAK,EAAE;QAAEC,eAAe,EAAE;MAAQ,CAAE;MACpCC,qBAAqB,EAAE;QAAEC,iBAAiB,EAAE;MAAG,CAAE;MACjDC,UAAU,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZC,UAAU,EAAE;MACd;IAAE,EACH,CAAC;EAAA,CACH;EAKDC,KAAK,EAAE,SAAAA,MAACT,KAAK;IAAA,OACXL,IAAA,CAACF,UAAU,EAAAQ,aAAA,CAAAA,aAAA,KACLD,KAAK;MACTI,qBAAqB,EAAE;QAAEC,iBAAiB,EAAE;MAAG,CAAE;MACjDC,UAAU,EAAE;QACVC,QAAQ,EAAE;MACZ,CAAE;MACFG,UAAU,EAAE;QACVH,QAAQ,EAAE;MACZ;IAAE,EACH,CAAC;EAAA,CACH;EAQDI,WAAW,EAAE,SAAAA,YAAAC,IAAA;IAAA,IAAGC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEb,KAAK,GAAAY,IAAA,CAALZ,KAAK;IAAA,OAC1BH,KAAA,CAACiB,IAAI;MAACZ,KAAK,EAAE;QAAEa,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,eAAe,EAAE;MAAS,CAAE;MAAAC,QAAA,GACpEvB,IAAA,CAACwB,IAAI;QAAAD,QAAA,EAAEL;MAAK,CAAO,CAAC,EACpBlB,IAAA,CAACwB,IAAI;QAAAD,QAAA,EAAElB,KAAK,CAACoB;MAAI,CAAO,CAAC;IAAA,CACrB,CAAC;EAAA;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}